buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')
        if (findProperty('android.kotlinVersion')) {
            kotlinVersion = findProperty('android.kotlinVersion')
        }
        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'
        ndkVersion = '26.1.10909125'
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath('com.android.tools.build:gradle')
        classpath('com.facebook.react:react-native-gradle-plugin')
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin")
        classpath('com.google.gms:google-services:4.3.15')
    }
}

def REACT_NATIVE_VERSION = new File(['node', '--print', "JSON.parse(require('fs').readFileSync(require.resolve('react-native/package.json'), 'utf-8')).version"].execute(null, rootDir).text.trim())

allprojects {
    configurations.all {
        resolutionStrategy {
            force "com.facebook.react:react-native:" + REACT_NATIVE_VERSION
        }
    }

    repositories {
        mavenLocal()
        maven {
            // expo-camera bundles a custom com.google.android:cameraview
            url "$rootDir/../../../node_modules/expo-camera/android/maven"
        }
        maven {
           // react-native-background-fetch
           url("${project(':react-native-background-fetch').projectDir}/libs")
        }
        maven {
           // Local Maven repo containing AARs with JSC library built for Android
           url "$rootDir/../../../node_modules/jsc-android/dist"
       }
    }
}

// @generated begin expo-camera-import - expo prebuild (DO NOT MODIFY) sync-f244f4f3d8bf7229102e8f992b525b8602c74770
def expoCameraMavenPath = new File(["node", "--print", "require.resolve('expo-camera/package.json')"].execute(null, rootDir).text.trim(), "../android/maven")
allprojects { repositories { maven { url(expoCameraMavenPath) } } }
// @generated end expo-camera-import

/**
   * Use the international variant of JavaScriptCore
   * This variant includes the ICU i18n library to make APIs like `Date.toLocaleString`
   * and `String.localeCompare` work when using with locales other than en-US.
   * Note that this variant is about 6MiB larger per architecture than the default.
   */
  def useIntlJsc = true

apply plugin: "com.facebook.react.rootproject"
